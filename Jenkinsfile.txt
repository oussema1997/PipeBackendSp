pipeline {
    agent any

    stages {

        stage('Build') {
            steps {
                script {
                     sh 'mvn clean install'
                }
            }
        }
         stage('Deploy') {
            steps {
                script {
                    
nexusArtifactUploader artifacts: [
[artifactId: 'DevOps_Project',
classifier: '', 
file: 'target/DevOps_Project-1.0.jar', 
type: 'jar']
], 
credentialsId: 'deploymentRepo', 
groupId: 'tn.esprit', nexusUrl: '192.168.33.15:8081',
 nexusVersion: 'nexus3', protocol: 'http',
 repository: 'SpringApp-release',
 version: '1.0.3'
                }
            }
        }
         stage('Build images') {
            steps {
                script {
                    // Build Docker images
                    sh 'docker rmi -f springappp || true'
                    sh 'docker build -t oussema97/springappp -f DockerFile.txt .'
                    sh 'docker images'
                }
            }
        }
     //   stage('Push image to Docker Hub') {
    //steps {
      //  script {
        //    withDockerRegistry([credentialsId: 'docker-hub-credentials', url: 'https://index.docker.io/v2/']) {
          //      sh 'docker login -u oussema97 -p leilehaelaallah123'
                //sh 'docker tag springappp:latest oussema97/sprigappp'
            //    sh 'docker push oussema97/springappp:latest'
            // }
       // }
   // }
// }
        stage('Run') {
            steps {
                script {
                    
                    sh 'docker compose up -d'
                }
            }
        }
   

 
    }
    
}